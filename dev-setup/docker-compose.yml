version: "3.8"
networks:
  net:
    driver: bridge

services:
  mongodb:
    image: mongo
    hostname: mongodb
    networks:
      - net
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
    ports:
      - 27017:27017
    command: mongod --noauth
    volumes:
      - ./mongodb/data:/data/db

  zitadel:
    restart: 'always'
    networks:
      net:
        aliases:
          - auth.local.the-zula.app
    depends_on:
      auth-db:
        condition: 'service_healthy'
        restart: true
#    healthcheck:
#      test: ["CMD", "curl", "-f", "http://localhost"]
#      interval: 60s
#      retries: 5
#      start_period: 20s
#      timeout: 10s      
    image: 'ghcr.io/zitadel/zitadel:latest'
    command: 'start-from-init --config ./zitadel-config.yaml --config ./zitadel-secrets.yaml --steps ./zitadel-init-steps.yaml --masterkey "MasterkeyNeedsToHave32Characters" --tlsMode enabled'
    volumes:
      - ./certs/cert.pem:/etc/certs/cert.pem
      - ./certs/privkey.pem:/etc/certs/privkey.key
      - "./zitadel-config.yaml:/zitadel-config.yaml:ro"
      - "./zitadel-secrets.yaml:/zitadel-secrets.yaml:ro"
      - "./zitadel-init-steps.yaml:/zitadel-init-steps.yaml:ro"
    ports:
      - '8080:8080'

  auth-db:
    restart: 'always'
    image: postgres:16-alpine
  #  command: ["postgres", "-c", "log_statement=all", "-c", "log_destination=stderr"]
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      - 'net'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "db_prod"]
      interval: '10s'
      timeout: '30s'
      retries: 5
      start_period: '20s'
    volumes:
      - ./postgres-initdb:/docker-entrypoint-initdb.d/
      - ./postgres-certs/cert.pem:/var/lib/postgresql/certs/cert.pem
      - ./postgres-certs/privkey.pem:/var/lib/postgresql/certs/privkey.pem
    ports:
      - '5432:5432'

  frontend:
    build:
      context: ../frontend/
      dockerfile: Dockerfile.dev
      target: dev
    restart: always
    networks:
      - net
    command: npm run dev
    ports:
      - 3000:3000
    volumes:
      - ../frontend:/app
      - ../frontend/node_modules:/app/node_modules

  service:
    build:
      context: ../service
      dockerfile: Dockerfile.dev
    working_dir: /app
    restart: always
    networks:
      - net
    depends_on:
      - zitadel
      - mongodb
    ports:
      - 8081:8081
    volumes:
      - ../service/:/app
     # - ./certs/zitadel-key.json:/app/certs/zitadel-key.json
    environment:
      - MONGO_URI=mongodb://localhost:27017/zula

  traefik:
    image: "traefik:latest"
    networks:
      - net
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "./traefik.yaml:/etc/traefik/traefik.yaml"
      - ./certs/cert.pem:/etc/certs/cert.pem
      - ./certs/privkey.pem:/etc/certs/privkey.key
